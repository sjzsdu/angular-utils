{
    "pipes": [],
    "interfaces": [
        {
            "name": "IData",
            "id": "interface-IData-f61db9aea3388c39ed4847867a707b308bd04815bfec72a41f2de405f8e46a0971c9fb22fda0cae114782deffadeaf281ecaaa460db25956818f1dac382a0c05",
            "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Meta, StoryObj } from '@storybook/angular';\nimport { applicationConfig, moduleMetadata } from '@storybook/angular';\nimport { importProvidersFrom } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NzTableModule } from 'ng-zorro-antd/table';\nimport { faker } from '@faker-js/faker';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { FormsModule } from '@angular/forms';\nimport { IColumn, IRow } from '../../lib/components/table/type';\nimport { FrontendTableComponent } from '../../lib/components/table/frontend-table/frontend-table.component';\nimport { PipesModule } from '../../lib/pipes/';\n\ninterface IData extends IRow {\n  id: number;\n  name: string;\n  age: number;\n  address: string;\n  expandContent?: string;\n}\n\nconst generateSampleData = (count: number): IData[] => {\n  return Array.from({ length: count }, (_, index) => ({\n    id: index + 1,\n    name: faker.person.fullName(),\n    age: faker.number.int({ min: 18, max: 80 }),\n    address: faker.location.streetAddress(),\n    expandContent: `Details for ${faker.person.fullName()}:\n- Phone: ${faker.phone.number()}\n- Email: ${faker.internet.email()}\n- Company: ${faker.company.name()}\n- Job: ${faker.person.jobTitle()}`,\n  }));\n};\n\nconst meta: Meta<FrontendTableComponent<IData>> = {\n  title: 'Components/FrontendTable',\n  component: FrontendTableComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [NzTableModule, PipesModule, NzRadioModule, FormsModule],\n    }),\n    applicationConfig({\n      providers: [importProvidersFrom(BrowserAnimationsModule)],\n    }),\n  ],\n  parameters: {\n    docs: {\n      autodocs: true,\n      description: {\n        component: `\n### FrontendTable Component Documentation\n\n#### Basic Usage\n\\`\\`\\`html\n<wn-frontend-table\n  [nzData]=\"nzData\"\n  [columns]=\"columns\"\n></wn-frontend-table>\n\\`\\`\\`\n\n#### Columns Configuration\n\\`\\`\\`typescript\ninterface IColumn {\n  name: string; // Field name\n  title: string; // Column header text\n  type: 'text' | 'number' | 'date' | 'custom'; // Data type\n  params?: Record<string, any>; // Type parameters\n  sortFilter?: { // Sorting and filtering configuration\n    sortOrder: SortOrder | null;\n    sortFn: (a: any, b: any) => number;\n    sortDirections: SortOrder[];\n    filterFn: (list: any[], item: any) => boolean;\n    listOfFilter: { text: string; value: any }[];\n    filterMultiple: boolean;\n  };\n}\n\\`\\`\\`\n\n#### Supported Features\n- Pagination (\\`nzShowPagination\\`)\n- Page size changer (\\`nzShowSizeChanger\\`)\n- Row selection (\\`showChecked\\`)\n- Sorting (\\`sortFilter\\`)\n- Filtering (\\`sortFilter\\`)\n        `,\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<FrontendTableComponent<IData>>;\n\nconst sampleData: IData[] = generateSampleData(100);\n\n// Keep source columns unchanged\nconst columns = [\n  {\n    name: 'name',\n    title: 'Name',\n    type: 'text' as const,\n    params: {},\n  },\n  {\n    name: 'age',\n    title: 'Age',\n    type: 'text' as const,\n    params: {},\n  },\n  {\n    name: 'address',\n    title: 'Address',\n    type: 'text' as const,\n    params: {},\n  },\n];\n\n// add column to the end of the columns array\nconst getUniqueValues = (data: IData[], key: keyof IData, count = 5) => {\n  const values = [\n    ...new Set(\n      data.map((item) => {\n        if (key === 'age') {\n          return Math.floor(item[key] / 10) * 10;\n        }\n        return item[key].toString().split(' ')[0];\n      })\n    ),\n  ];\n  return values.slice(0, count).map((value) => ({ text: value, value }));\n};\n\nconst columnsWithSortFilter = [\n  {\n    ...columns[0],\n    sortFilter: {\n      sortOrder: null,\n      sortFn: (a: IData, b: IData) => a.name.localeCompare(b.name),\n      sortDirections: ['ascend', 'descend', null],\n      filterFn: (list: string[], item: IData) => list.some((name) => item.name.includes(name)),\n      listOfFilter: getUniqueValues(sampleData, 'name'),\n      filterMultiple: true,\n    },\n  },\n  {\n    ...columns[1],\n    sortFilter: {\n      sortOrder: null,\n      sortFn: (a: IData, b: IData) => a.age - b.age,\n      sortDirections: ['ascend', 'descend', null],\n      filterFn: (list: number[], item: IData) => list.some((age) => item.age >= age && item.age < age + 10),\n      listOfFilter: getUniqueValues(sampleData, 'age'),\n      filterMultiple: true,\n    },\n  },\n  {\n    ...columns[2],\n    sortFilter: {\n      sortOrder: null,\n      sortFn: (a: IData, b: IData) => a.address.localeCompare(b.address),\n      sortDirections: ['ascend', 'descend', null],\n      filterFn: (list: string[], item: IData) => list.some((address) => item.address.includes(address)),\n      listOfFilter: getUniqueValues(sampleData, 'address'),\n      filterMultiple: true,\n    },\n  },\n];\n\nexport const Primary: Story = {\n  args: {\n    nzData: sampleData,\n    columns: columns,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n      ></wn-frontend-table>\n    `,\n  }),\n};\n\nexport const Checkable: Story = {\n  args: {\n    nzData: sampleData,\n    columns: columns,\n    showChecked: true,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n        [showChecked]=\"showChecked\"\n      ></wn-frontend-table>\n    `,\n  }),\n};\n\nexport const Pagination: Story = {\n  args: {\n    nzData: sampleData,\n    columns: columns,\n    nzShowPagination: true,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n        [nzShowPagination]=\"nzShowPagination\"\n      ></wn-frontend-table>\n    `,\n  }),\n};\n\nexport const SizeChanger: Story = {\n  args: {\n    nzData: sampleData,\n    columns: columns,\n    nzShowSizeChanger: true,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n        [nzShowSizeChanger]=\"nzShowSizeChanger\"\n      ></wn-frontend-table>\n    `,\n  }),\n};\n\nexport const Sorting: Story = {\n  args: {\n    nzData: sampleData,\n    columns: columnsWithSortFilter,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n      ></wn-frontend-table>\n    `,\n  }),\n};\n\nexport const Filtering: Story = {\n  args: {\n    nzData: sampleData,\n    columns: columns,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n      ></wn-frontend-table>\n    `,\n  }),\n};\n\nexport const AllFeatures: Story = {\n  args: {\n    nzData: sampleData,\n    columns: columns,\n    showChecked: true,\n    nzShowPagination: true,\n    nzShowSizeChanger: true,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n        [showChecked]=\"showChecked\"\n        [nzShowPagination]=\"nzShowPagination\"\n        [nzShowSizeChanger]=\"nzShowSizeChanger\"\n      ></wn-frontend-table>\n    `,\n  }),\n};\n\nexport const BasicFeatures: Story = {\n  args: {\n    nzData: sampleData,\n    columns: columns,\n    nzTitle: 'Table Header',\n    nzFooter: 'Table Footer',\n    nzBordered: true,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n        [nzTitle]=\"nzTitle\"\n        [nzFooter]=\"nzFooter\"\n        [nzBordered]=\"nzBordered\"\n      ></wn-frontend-table>\n    `,\n  }),\n};\n\ninterface WithSizeProps {\n  nzData: IData[];\n  columns: Array<{\n    name: string;\n    title: string;\n    type: 'text';\n    params: Record<string, any>;\n    sortFilter?: {\n      sortOrder: 'ascend' | 'descend' | null;\n      sortFn: (a: any, b: any) => number;\n      sortDirections: Array<'ascend' | 'descend' | null>;\n      filterFn: (list: any[], item: any) => boolean;\n      listOfFilter: Array<{ text: string; value: any }>;\n      filterMultiple: boolean;\n    };\n  }>;\n  sizeOptions: Array<{ label: string; value: 'small' | 'middle' | 'default' }>;\n  currentSize: 'small' | 'middle' | 'default';\n  toggleSize: () => void;\n  onSizeChange: (size: 'small' | 'middle' | 'default') => void;\n}\n\nexport const WithSize: Story = {\n  args: {\n    nzData: sampleData,\n    columns: columns,\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n      currentSize: 'small',\n      sizeOptions: [\n        { label: 'Small', value: 'small' },\n        { label: 'Middle', value: 'middle' },\n        { label: 'Default', value: 'default' },\n      ],\n      onSizeChange: function (size: 'small' | 'middle' | 'default') {\n        console.log('onSizeChange', size);\n        this['currentSize'] = size;\n      },\n    },\n    template: `\n      <div>\n        <nz-radio-group\n          [(ngModel)]=\"currentSize\"\n          (ngModelChange)=\"onSizeChange($event)\"\n          style=\"margin-bottom: 16px\"\n        >\n          <label nz-radio *ngFor=\"let option of sizeOptions\" [nzValue]=\"option.value\">\n            {{option.label}}\n          </label>\n        </nz-radio-group>\n        <wn-frontend-table\n          [nzData]=\"nzData\"\n          [columns]=\"columns\"\n          [nzSize]=\"currentSize\"\n          [nzBordered]=\"true\"\n        ></wn-frontend-table>\n      </div>\n    `,\n  }),\n};\n\nexport const Expandable: Story = {\n  args: {\n    nzData: sampleData,\n    columns: columns,\n    nzExpandable: true,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [expandKey]=\"'expandContent'\"\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n        [nzExpandable]=\"nzExpandable\"\n      ></wn-frontend-table>\n    `,\n  }),\n};\n\nconst columnsExtended: IColumn<IData>[] = [\n  ...columns,\n  ...columns.map((col) => ({ ...col, name: col.name + '-1', title: col.title + '-1' })),\n  {\n    name: 'actions',\n    title: 'Actions',\n    type: 'text',\n    params: {},\n    fixRight: true,\n    width: '100px',\n  },\n];\nexport const WithMaxDimensions: Story = {\n  args: {\n    nzData: sampleData,\n    columns: columnsExtended,\n    maxWidth: '800px',\n    maxHeight: '400px',\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n        [maxWidth]=\"maxWidth\"\n        [maxHeight]=\"maxHeight\"\n        [nzShowPagination]=\"false\"\n      ></wn-frontend-table>\n    `,\n  }),\n};\n\nexport const WithFixedColumns: Story = {\n  args: {\n    nzData: sampleData,\n    columns: columnsExtended,\n    maxWidth: '800px',\n    maxHeight: '400px',\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n        [maxWidth]=\"maxWidth\"\n        [maxHeight]=\"maxHeight\"\n        [nzShowPagination]=\"false\"\n      ></wn-frontend-table>\n    `,\n  }),\n};\n",
            "properties": [
                {
                    "name": "address",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "age",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "expandContent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [
                "IRow"
            ]
        },
        {
            "name": "WithSizeProps",
            "id": "interface-WithSizeProps-f61db9aea3388c39ed4847867a707b308bd04815bfec72a41f2de405f8e46a0971c9fb22fda0cae114782deffadeaf281ecaaa460db25956818f1dac382a0c05",
            "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Meta, StoryObj } from '@storybook/angular';\nimport { applicationConfig, moduleMetadata } from '@storybook/angular';\nimport { importProvidersFrom } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NzTableModule } from 'ng-zorro-antd/table';\nimport { faker } from '@faker-js/faker';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { FormsModule } from '@angular/forms';\nimport { IColumn, IRow } from '../../lib/components/table/type';\nimport { FrontendTableComponent } from '../../lib/components/table/frontend-table/frontend-table.component';\nimport { PipesModule } from '../../lib/pipes/';\n\ninterface IData extends IRow {\n  id: number;\n  name: string;\n  age: number;\n  address: string;\n  expandContent?: string;\n}\n\nconst generateSampleData = (count: number): IData[] => {\n  return Array.from({ length: count }, (_, index) => ({\n    id: index + 1,\n    name: faker.person.fullName(),\n    age: faker.number.int({ min: 18, max: 80 }),\n    address: faker.location.streetAddress(),\n    expandContent: `Details for ${faker.person.fullName()}:\n- Phone: ${faker.phone.number()}\n- Email: ${faker.internet.email()}\n- Company: ${faker.company.name()}\n- Job: ${faker.person.jobTitle()}`,\n  }));\n};\n\nconst meta: Meta<FrontendTableComponent<IData>> = {\n  title: 'Components/FrontendTable',\n  component: FrontendTableComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [NzTableModule, PipesModule, NzRadioModule, FormsModule],\n    }),\n    applicationConfig({\n      providers: [importProvidersFrom(BrowserAnimationsModule)],\n    }),\n  ],\n  parameters: {\n    docs: {\n      autodocs: true,\n      description: {\n        component: `\n### FrontendTable Component Documentation\n\n#### Basic Usage\n\\`\\`\\`html\n<wn-frontend-table\n  [nzData]=\"nzData\"\n  [columns]=\"columns\"\n></wn-frontend-table>\n\\`\\`\\`\n\n#### Columns Configuration\n\\`\\`\\`typescript\ninterface IColumn {\n  name: string; // Field name\n  title: string; // Column header text\n  type: 'text' | 'number' | 'date' | 'custom'; // Data type\n  params?: Record<string, any>; // Type parameters\n  sortFilter?: { // Sorting and filtering configuration\n    sortOrder: SortOrder | null;\n    sortFn: (a: any, b: any) => number;\n    sortDirections: SortOrder[];\n    filterFn: (list: any[], item: any) => boolean;\n    listOfFilter: { text: string; value: any }[];\n    filterMultiple: boolean;\n  };\n}\n\\`\\`\\`\n\n#### Supported Features\n- Pagination (\\`nzShowPagination\\`)\n- Page size changer (\\`nzShowSizeChanger\\`)\n- Row selection (\\`showChecked\\`)\n- Sorting (\\`sortFilter\\`)\n- Filtering (\\`sortFilter\\`)\n        `,\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<FrontendTableComponent<IData>>;\n\nconst sampleData: IData[] = generateSampleData(100);\n\n// Keep source columns unchanged\nconst columns = [\n  {\n    name: 'name',\n    title: 'Name',\n    type: 'text' as const,\n    params: {},\n  },\n  {\n    name: 'age',\n    title: 'Age',\n    type: 'text' as const,\n    params: {},\n  },\n  {\n    name: 'address',\n    title: 'Address',\n    type: 'text' as const,\n    params: {},\n  },\n];\n\n// add column to the end of the columns array\nconst getUniqueValues = (data: IData[], key: keyof IData, count = 5) => {\n  const values = [\n    ...new Set(\n      data.map((item) => {\n        if (key === 'age') {\n          return Math.floor(item[key] / 10) * 10;\n        }\n        return item[key].toString().split(' ')[0];\n      })\n    ),\n  ];\n  return values.slice(0, count).map((value) => ({ text: value, value }));\n};\n\nconst columnsWithSortFilter = [\n  {\n    ...columns[0],\n    sortFilter: {\n      sortOrder: null,\n      sortFn: (a: IData, b: IData) => a.name.localeCompare(b.name),\n      sortDirections: ['ascend', 'descend', null],\n      filterFn: (list: string[], item: IData) => list.some((name) => item.name.includes(name)),\n      listOfFilter: getUniqueValues(sampleData, 'name'),\n      filterMultiple: true,\n    },\n  },\n  {\n    ...columns[1],\n    sortFilter: {\n      sortOrder: null,\n      sortFn: (a: IData, b: IData) => a.age - b.age,\n      sortDirections: ['ascend', 'descend', null],\n      filterFn: (list: number[], item: IData) => list.some((age) => item.age >= age && item.age < age + 10),\n      listOfFilter: getUniqueValues(sampleData, 'age'),\n      filterMultiple: true,\n    },\n  },\n  {\n    ...columns[2],\n    sortFilter: {\n      sortOrder: null,\n      sortFn: (a: IData, b: IData) => a.address.localeCompare(b.address),\n      sortDirections: ['ascend', 'descend', null],\n      filterFn: (list: string[], item: IData) => list.some((address) => item.address.includes(address)),\n      listOfFilter: getUniqueValues(sampleData, 'address'),\n      filterMultiple: true,\n    },\n  },\n];\n\nexport const Primary: Story = {\n  args: {\n    nzData: sampleData,\n    columns: columns,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n      ></wn-frontend-table>\n    `,\n  }),\n};\n\nexport const Checkable: Story = {\n  args: {\n    nzData: sampleData,\n    columns: columns,\n    showChecked: true,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n        [showChecked]=\"showChecked\"\n      ></wn-frontend-table>\n    `,\n  }),\n};\n\nexport const Pagination: Story = {\n  args: {\n    nzData: sampleData,\n    columns: columns,\n    nzShowPagination: true,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n        [nzShowPagination]=\"nzShowPagination\"\n      ></wn-frontend-table>\n    `,\n  }),\n};\n\nexport const SizeChanger: Story = {\n  args: {\n    nzData: sampleData,\n    columns: columns,\n    nzShowSizeChanger: true,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n        [nzShowSizeChanger]=\"nzShowSizeChanger\"\n      ></wn-frontend-table>\n    `,\n  }),\n};\n\nexport const Sorting: Story = {\n  args: {\n    nzData: sampleData,\n    columns: columnsWithSortFilter,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n      ></wn-frontend-table>\n    `,\n  }),\n};\n\nexport const Filtering: Story = {\n  args: {\n    nzData: sampleData,\n    columns: columns,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n      ></wn-frontend-table>\n    `,\n  }),\n};\n\nexport const AllFeatures: Story = {\n  args: {\n    nzData: sampleData,\n    columns: columns,\n    showChecked: true,\n    nzShowPagination: true,\n    nzShowSizeChanger: true,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n        [showChecked]=\"showChecked\"\n        [nzShowPagination]=\"nzShowPagination\"\n        [nzShowSizeChanger]=\"nzShowSizeChanger\"\n      ></wn-frontend-table>\n    `,\n  }),\n};\n\nexport const BasicFeatures: Story = {\n  args: {\n    nzData: sampleData,\n    columns: columns,\n    nzTitle: 'Table Header',\n    nzFooter: 'Table Footer',\n    nzBordered: true,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n        [nzTitle]=\"nzTitle\"\n        [nzFooter]=\"nzFooter\"\n        [nzBordered]=\"nzBordered\"\n      ></wn-frontend-table>\n    `,\n  }),\n};\n\ninterface WithSizeProps {\n  nzData: IData[];\n  columns: Array<{\n    name: string;\n    title: string;\n    type: 'text';\n    params: Record<string, any>;\n    sortFilter?: {\n      sortOrder: 'ascend' | 'descend' | null;\n      sortFn: (a: any, b: any) => number;\n      sortDirections: Array<'ascend' | 'descend' | null>;\n      filterFn: (list: any[], item: any) => boolean;\n      listOfFilter: Array<{ text: string; value: any }>;\n      filterMultiple: boolean;\n    };\n  }>;\n  sizeOptions: Array<{ label: string; value: 'small' | 'middle' | 'default' }>;\n  currentSize: 'small' | 'middle' | 'default';\n  toggleSize: () => void;\n  onSizeChange: (size: 'small' | 'middle' | 'default') => void;\n}\n\nexport const WithSize: Story = {\n  args: {\n    nzData: sampleData,\n    columns: columns,\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n      currentSize: 'small',\n      sizeOptions: [\n        { label: 'Small', value: 'small' },\n        { label: 'Middle', value: 'middle' },\n        { label: 'Default', value: 'default' },\n      ],\n      onSizeChange: function (size: 'small' | 'middle' | 'default') {\n        console.log('onSizeChange', size);\n        this['currentSize'] = size;\n      },\n    },\n    template: `\n      <div>\n        <nz-radio-group\n          [(ngModel)]=\"currentSize\"\n          (ngModelChange)=\"onSizeChange($event)\"\n          style=\"margin-bottom: 16px\"\n        >\n          <label nz-radio *ngFor=\"let option of sizeOptions\" [nzValue]=\"option.value\">\n            {{option.label}}\n          </label>\n        </nz-radio-group>\n        <wn-frontend-table\n          [nzData]=\"nzData\"\n          [columns]=\"columns\"\n          [nzSize]=\"currentSize\"\n          [nzBordered]=\"true\"\n        ></wn-frontend-table>\n      </div>\n    `,\n  }),\n};\n\nexport const Expandable: Story = {\n  args: {\n    nzData: sampleData,\n    columns: columns,\n    nzExpandable: true,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [expandKey]=\"'expandContent'\"\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n        [nzExpandable]=\"nzExpandable\"\n      ></wn-frontend-table>\n    `,\n  }),\n};\n\nconst columnsExtended: IColumn<IData>[] = [\n  ...columns,\n  ...columns.map((col) => ({ ...col, name: col.name + '-1', title: col.title + '-1' })),\n  {\n    name: 'actions',\n    title: 'Actions',\n    type: 'text',\n    params: {},\n    fixRight: true,\n    width: '100px',\n  },\n];\nexport const WithMaxDimensions: Story = {\n  args: {\n    nzData: sampleData,\n    columns: columnsExtended,\n    maxWidth: '800px',\n    maxHeight: '400px',\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n        [maxWidth]=\"maxWidth\"\n        [maxHeight]=\"maxHeight\"\n        [nzShowPagination]=\"false\"\n      ></wn-frontend-table>\n    `,\n  }),\n};\n\nexport const WithFixedColumns: Story = {\n  args: {\n    nzData: sampleData,\n    columns: columnsExtended,\n    maxWidth: '800px',\n    maxHeight: '400px',\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n        [maxWidth]=\"maxWidth\"\n        [maxHeight]=\"maxHeight\"\n        [nzShowPagination]=\"false\"\n      ></wn-frontend-table>\n    `,\n  }),\n};\n",
            "properties": [
                {
                    "name": "columns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<literal type>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 318
                },
                {
                    "name": "currentSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"small\" | \"middle\" | \"default\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 333
                },
                {
                    "name": "nzData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IData[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 317
                },
                {
                    "name": "onSizeChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 335
                },
                {
                    "name": "sizeOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<literal type>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 332
                },
                {
                    "name": "toggleSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 334
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "BlurOnClickStoryComponent",
            "id": "component-BlurOnClickStoryComponent-5ee9a61e49fce1199de15a59c63e99bd099aba63ae860a043526f0187f5473e9498348424a8eebf082092e25f9ad9e74d077eb45b97cf23385683bb939a3e450",
            "file": "projects/wn-zorro/src/stories/directives/blur-on-click.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "story-blur-on-click",
            "styleUrls": [],
            "styles": [],
            "template": "<div style=\"padding: 20px;\">\n  <button appBlurOnClick style=\"padding: 10px 20px;\">Click to Blur</button>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj } from '@storybook/angular';\nimport { BlurOnClickDirective } from '../../lib/directives/blur-on-click.directive';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'story-blur-on-click',\n  template: `\n    <div style=\"padding: 20px;\">\n      <button appBlurOnClick style=\"padding: 10px 20px;\">Click to Blur</button>\n    </div>\n  `,\n})\nclass BlurOnClickStoryComponent {}\n\nconst meta: Meta<BlurOnClickStoryComponent> = {\n  title: 'Directives/BlurOnClick',\n  component: BlurOnClickStoryComponent,\n  tags: ['autodocs'],\n};\n\nexport default meta;\ntype Story = StoryObj<BlurOnClickStoryComponent>;\n\nexport const Primary: Story = {\n  args: {},\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "ClickOutsideStoryComponent",
            "id": "component-ClickOutsideStoryComponent-2692823bd88526f0ad10b4861f277bef6a2aa767d4166185bace7254cb2a23f8cf74a0a71adf48f225d3a9e8a5ee6af438c2bd5a37120ae2378a48bfbd492c32",
            "file": "projects/wn-zorro/src/stories/directives/click-outside.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "story-click-outside",
            "styleUrls": [],
            "styles": [],
            "template": "<div style=\"padding: 20px;\">\n  <div appClickOutside (clickOutside)=\"onClickOutside($event)\" style=\"border: 1px solid #ccc; padding: 20px;\">\n    <p>Click inside this box - nothing happens</p>\n    <button class=\"excluded\">Excluded Button</button>\n  </div>\n  <p style=\"margin-top: 20px;\">Clicked outside element: {{ clickedElement?.tagName }}</p>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "clickedElement",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "onClickOutside",
                    "args": [
                        {
                            "name": "element",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj } from '@storybook/angular';\nimport { ClickOutsideDirective } from '../../lib/directives/click-outside.directive';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'story-click-outside',\n  template: `\n    <div style=\"padding: 20px;\">\n      <div appClickOutside (clickOutside)=\"onClickOutside($event)\" style=\"border: 1px solid #ccc; padding: 20px;\">\n        <p>Click inside this box - nothing happens</p>\n        <button class=\"excluded\">Excluded Button</button>\n      </div>\n      <p style=\"margin-top: 20px;\">Clicked outside element: {{ clickedElement?.tagName }}</p>\n    </div>\n  `,\n})\nclass ClickOutsideStoryComponent {\n  clickedElement: HTMLElement | null = null;\n\n  onClickOutside(element: HTMLElement) {\n    this.clickedElement = element;\n  }\n}\n\nconst meta: Meta<ClickOutsideStoryComponent> = {\n  title: 'Directives/ClickOutside',\n  component: ClickOutsideStoryComponent,\n  tags: ['autodocs'],\n};\n\nexport default meta;\ntype Story = StoryObj<ClickOutsideStoryComponent>;\n\nexport const Primary: Story = {\n  args: {},\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "ScrollToStoryComponent",
            "id": "component-ScrollToStoryComponent-3ab288f0b2dd1d1c57c53261c3117384ff9e2b47a9085e6e24e28a976a08c167580f552d7f3d2f8098dbe465e308aa3763a7082ca2875f76b93e0f72c63c9b81",
            "file": "projects/wn-zorro/src/stories/directives/scrollto.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "story-scroll-to",
            "styleUrls": [],
            "styles": [],
            "template": "<div style=\"height: 100vh; display: flex; flex-direction: column;\">\n  <button style=\"margin: 10px;\" (click)=\"scrollTo('target1')\">Scroll to Target 1</button>\n  <button style=\"margin: 10px;\" (click)=\"scrollTo('target2')\">Scroll to Target 2</button>\n  <button style=\"margin: 10px;\" (click)=\"scrollTo()\">Scroll to Target 2</button>\n\n  <div style=\"overflow-y: auto; height: 300px; border: 1px solid #ccc; padding: 10px;\">\n    <div style=\"height: 500px;\">\n      <p>Scrollable content area</p>\n\n      <div id=\"target1\" style=\"background: blue; padding: 20px; margin: 20px 0;\">Target 1</div>\n\n      <div style=\"height: 300px;\" appScrollTo #scrollToDirective=\"appScrollTo\"></div>\n\n      <div id=\"target2\" style=\"background: green; padding: 20px; margin: 20px 0;\">Target 2</div>\n      <div style=\"height: 800px;\"></div>\n      <div id=\"target3\" style=\"background: red; padding: 20px; margin: 20px 0;\">Target 3</div>\n    </div>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "scrollToDirective",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ScrollToDirective",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'scrollToDirective'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "scrollTo",
                    "args": [
                        {
                            "name": "target",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "target",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "ScrollToDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj } from '@storybook/angular';\nimport { ScrollToDirective } from '../../lib/directives/scrollto.directive';\nimport { Component, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'story-scroll-to',\n  imports: [ScrollToDirective],\n  template: `\n    <div style=\"height: 100vh; display: flex; flex-direction: column;\">\n      <button style=\"margin: 10px;\" (click)=\"scrollTo('target1')\">Scroll to Target 1</button>\n      <button style=\"margin: 10px;\" (click)=\"scrollTo('target2')\">Scroll to Target 2</button>\n      <button style=\"margin: 10px;\" (click)=\"scrollTo()\">Scroll to Target 2</button>\n\n      <div style=\"overflow-y: auto; height: 300px; border: 1px solid #ccc; padding: 10px;\">\n        <div style=\"height: 500px;\">\n          <p>Scrollable content area</p>\n\n          <div id=\"target1\" style=\"background: blue; padding: 20px; margin: 20px 0;\">Target 1</div>\n\n          <div style=\"height: 300px;\" appScrollTo #scrollToDirective=\"appScrollTo\"></div>\n\n          <div id=\"target2\" style=\"background: green; padding: 20px; margin: 20px 0;\">Target 2</div>\n          <div style=\"height: 800px;\"></div>\n          <div id=\"target3\" style=\"background: red; padding: 20px; margin: 20px 0;\">Target 3</div>\n        </div>\n      </div>\n    </div>\n  `,\n})\nclass ScrollToStoryComponent {\n  @ViewChild('scrollToDirective') scrollToDirective!: ScrollToDirective;\n\n  scrollTo(target?: string) {\n    this.scrollToDirective.scrollToTarget(target);\n  }\n}\n\nconst meta: Meta<ScrollToStoryComponent> = {\n  title: 'Directives/ScrollTo',\n  component: ScrollToStoryComponent,\n  tags: ['autodocs'],\n};\n\nexport default meta;\ntype Story = StoryObj<ScrollToStoryComponent>;\n\nexport const Primary: Story = {\n  args: {},\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "AllFeatures",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    nzData: sampleData,\n    columns: columns,\n    showChecked: true,\n    nzShowPagination: true,\n    nzShowSizeChanger: true,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n        [showChecked]=\"showChecked\"\n        [nzShowPagination]=\"nzShowPagination\"\n        [nzShowSizeChanger]=\"nzShowSizeChanger\"\n      ></wn-frontend-table>\n    `,\n  }),\n}"
            },
            {
                "name": "BasicFeatures",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    nzData: sampleData,\n    columns: columns,\n    nzTitle: 'Table Header',\n    nzFooter: 'Table Footer',\n    nzBordered: true,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n        [nzTitle]=\"nzTitle\"\n        [nzFooter]=\"nzFooter\"\n        [nzBordered]=\"nzBordered\"\n      ></wn-frontend-table>\n    `,\n  }),\n}"
            },
            {
                "name": "ButtonMode",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/template/helper-center.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    mode: 'button',\n    text: 'Click for help',\n    type: 'primary',\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Help center displayed as a clickable button',\n      },\n    },\n  },\n}"
            },
            {
                "name": "Checkable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    nzData: sampleData,\n    columns: columns,\n    showChecked: true,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n        [showChecked]=\"showChecked\"\n      ></wn-frontend-table>\n    `,\n  }),\n}"
            },
            {
                "name": "columns",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {\n    name: 'name',\n    title: 'Name',\n    type: 'text' as const,\n    params: {},\n  },\n  {\n    name: 'age',\n    title: 'Age',\n    type: 'text' as const,\n    params: {},\n  },\n  {\n    name: 'address',\n    title: 'Address',\n    type: 'text' as const,\n    params: {},\n  },\n]"
            },
            {
                "name": "columnsExtended",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IColumn[]",
                "defaultValue": "[\n  ...columns,\n  ...columns.map((col) => ({ ...col, name: col.name + '-1', title: col.title + '-1' })),\n  {\n    name: 'actions',\n    title: 'Actions',\n    type: 'text',\n    params: {},\n    fixRight: true,\n    width: '100px',\n  },\n]"
            },
            {
                "name": "columnsWithSortFilter",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {\n    ...columns[0],\n    sortFilter: {\n      sortOrder: null,\n      sortFn: (a: IData, b: IData) => a.name.localeCompare(b.name),\n      sortDirections: ['ascend', 'descend', null],\n      filterFn: (list: string[], item: IData) => list.some((name) => item.name.includes(name)),\n      listOfFilter: getUniqueValues(sampleData, 'name'),\n      filterMultiple: true,\n    },\n  },\n  {\n    ...columns[1],\n    sortFilter: {\n      sortOrder: null,\n      sortFn: (a: IData, b: IData) => a.age - b.age,\n      sortDirections: ['ascend', 'descend', null],\n      filterFn: (list: number[], item: IData) => list.some((age) => item.age >= age && item.age < age + 10),\n      listOfFilter: getUniqueValues(sampleData, 'age'),\n      filterMultiple: true,\n    },\n  },\n  {\n    ...columns[2],\n    sortFilter: {\n      sortOrder: null,\n      sortFn: (a: IData, b: IData) => a.address.localeCompare(b.address),\n      sortDirections: ['ascend', 'descend', null],\n      filterFn: (list: string[], item: IData) => list.some((address) => item.address.includes(address)),\n      listOfFilter: getUniqueValues(sampleData, 'address'),\n      filterMultiple: true,\n    },\n  },\n]"
            },
            {
                "name": "controlDisabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/form/form-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "FormController",
                "defaultValue": "{\n  disableds: [\n    {\n      field: 'gender',\n      rules: [\n        { value: 'male', columns: ['female_item'] },\n        { value: 'female', columns: ['male_item'] },\n      ],\n    },\n  ],\n}"
            },
            {
                "name": "controlHide",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/form/form-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "FormController",
                "defaultValue": "{\n  hides: [\n    {\n      field: 'gender',\n      rules: [\n        { value: 'male', columns: ['male_item'] },\n        { value: 'female', columns: ['female_item'] },\n      ],\n    },\n  ],\n}"
            },
            {
                "name": "controlReset",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/form/form-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "FormController",
                "defaultValue": "{\n  resets: [\n    {\n      field: 'username',\n      columns: ['email'],\n    },\n  ],\n}"
            },
            {
                "name": "CustomText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/template/helper-center.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    mode: 'button',\n    text: 'Custom help text',\n    type: 'primary',\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Help center with custom text',\n      },\n    },\n  },\n}"
            },
            {
                "name": "CustomTooltips",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/views/copy-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    value: 'Text with custom message',\n    copiedTip: 'Text copied to clipboard!',\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'CopyText component with custom tooltip messages',\n      },\n    },\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/template/helper-center.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  parameters: {\n    docs: {\n      description: {\n        story: 'Default help center with minimal configuration',\n      },\n    },\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/views/copy-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    value: 'Sample text to copy',\n    title: 'Copy title',\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Default CopyText component with sample text',\n      },\n    },\n  },\n}"
            },
            {
                "name": "defaultItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/form/form-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "FormItem[]",
                "defaultValue": "[\n  {\n    name: 'username',\n    type: 'input',\n    params: {\n      nzAddOnBefore: 'User',\n    },\n    label: {\n      label: 'Username',\n      tooltip: 'Your login name',\n      help: 'Must be unique',\n    },\n    placeholder: 'Enter your username',\n    required: true,\n    validates: ['required', 'minLength'],\n    validatesArgs: {\n      minLength: [4],\n    },\n    control: {\n      hasFeedback: true,\n      errorTip: 'Username is required and must be at least 4 characters',\n      successTip: 'Username is valid',\n    },\n  },\n  {\n    name: 'subscribe',\n    type: 'checkbox',\n    label: {\n      label: 'Subscribe to newsletter',\n    },\n    required: false,\n  },\n  {\n    name: 'interests',\n    type: 'checkboxGroup',\n    label: {\n      label: 'Interests',\n      tooltip: 'Select your areas of interest',\n    },\n    params: {\n      options: [\n        { label: 'Technology', value: 'tech' },\n        { label: 'Sports', value: 'sports' },\n        { label: 'Music', value: 'music' },\n        { label: 'Travel', value: 'travel' },\n      ],\n    },\n    required: true,\n  },\n  {\n    name: 'country',\n    type: 'select',\n    label: {\n      label: 'Country',\n      tooltip: 'Select your country',\n    },\n    params: {\n      options: [\n        { label: 'United States', value: 'us' },\n        { label: 'Canada', value: 'ca' },\n        { label: 'United Kingdom', value: 'uk' },\n        { label: 'Australia', value: 'au' },\n      ],\n      showSearch: true,\n      mode: 'default',\n      size: 'default',\n    },\n    placeholder: 'Select a country',\n    required: true,\n  },\n  {\n    name: 'gender',\n    type: 'radio',\n    required: true,\n    params: {\n      options: ['male', 'female'],\n    },\n  },\n  {\n    name: 'male_item',\n    type: 'input',\n  },\n  {\n    name: 'female_item',\n    type: 'input',\n  },\n  {\n    name: 'email',\n    type: 'input',\n    params: {\n      nzAddOnBefore: '',\n      nzAddOnAfter: '',\n    },\n    label: {\n      label: 'Email',\n      tooltip: 'Your email address',\n      help: 'We will send verification email',\n    },\n    placeholder: 'Enter your email',\n    required: true,\n    validates: ['regexp'],\n    validatesArgs: {\n      regexp: [/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/],\n    },\n    control: {\n      hasFeedback: true,\n      errorTip: 'Invalid email format',\n      successTip: 'Valid email',\n    },\n  },\n  {\n    name: 'age',\n    type: 'number',\n    params: {\n      nzAddOnAfter: 'years',\n    },\n    label: {\n      label: 'Age',\n      tooltip: 'Your actual age',\n    },\n    placeholder: 'Enter your age',\n    required: true,\n    validates: ['required', 'min', 'max'],\n    validatesArgs: {\n      min: [0],\n      max: [120],\n    },\n    control: {\n      hasFeedback: true,\n      errorTip: 'Age must be between 0 and 120',\n    },\n  },\n]"
            },
            {
                "name": "EmptyText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/views/copy-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    value: '',\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'CopyText component with no text to copy',\n      },\n    },\n  },\n}"
            },
            {
                "name": "Expandable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    nzData: sampleData,\n    columns: columns,\n    nzExpandable: true,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [expandKey]=\"'expandContent'\"\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n        [nzExpandable]=\"nzExpandable\"\n      ></wn-frontend-table>\n    `,\n  }),\n}"
            },
            {
                "name": "Filtering",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    nzData: sampleData,\n    columns: columns,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n      ></wn-frontend-table>\n    `,\n  }),\n}"
            },
            {
                "name": "generateSampleData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(count: number): IData[] => {\n  return Array.from({ length: count }, (_, index) => ({\n    id: index + 1,\n    name: faker.person.fullName(),\n    age: faker.number.int({ min: 18, max: 80 }),\n    address: faker.location.streetAddress(),\n    expandContent: `Details for ${faker.person.fullName()}:\n- Phone: ${faker.phone.number()}\n- Email: ${faker.internet.email()}\n- Company: ${faker.company.name()}\n- Job: ${faker.person.jobTitle()}`,\n  }));\n}"
            },
            {
                "name": "getUniqueValues",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(data: IData[], key: keyof IData, count = 5) => {\n  const values = [\n    ...new Set(\n      data.map((item) => {\n        if (key === 'age') {\n          return Math.floor(item[key] / 10) * 10;\n        }\n        return item[key].toString().split(' ')[0];\n      })\n    ),\n  ];\n  return values.slice(0, count).map((value) => ({ text: value, value }));\n}"
            },
            {
                "name": "Interactive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/form/form-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    items: defaultItems,\n    layout: 'horizontal',\n    nzLabelAlign: 'right',\n    nzNoColon: false,\n    nzLabelWrap: false,\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n      onLayoutChange: (layout: 'horizontal' | 'vertical' | 'inline') => (args.layout = layout),\n      onAlignChange: (align: NzLabelAlignType) => (args.nzLabelAlign = align),\n    },\n    template: `\n      <div style=\"margin-bottom: 24px;\">\n        <label>Layout: </label>\n        <nz-radio-group [(ngModel)]=\"nzLayout\">\n          <label nz-radio nzValue=\"horizontal\">Horizontal</label>\n          <label nz-radio nzValue=\"vertical\">Vertical</label>\n          <label nz-radio nzValue=\"inline\">Inline</label>\n        </nz-radio-group>\n\n        <label style=\"margin-left: 24px;\">Label Align: </label>\n        <nz-radio-group [(ngModel)]=\"nzLabelAlign\">\n          <label nz-radio nzValue=\"left\">Left</label>\n          <label nz-radio nzValue=\"right\">Right</label>\n        </nz-radio-group>\n\n        <label style=\"margin-left: 24px;\">No Colon: </label>\n        <nz-switch [(ngModel)]=\"nzNoColon\"></nz-switch>\n\n        <label style=\"margin-left: 24px;\">Label Wrap: </label>\n        <nz-switch [(ngModel)]=\"nzLabelWrap\"></nz-switch>\n      </div>\n\n      <wn-form-group\n        [items]=\"items\"\n        [nzLayout]=\"nzLayout\"\n        [nzLabelAlign]=\"nzLabelAlign\"\n        [nzNoColon]=\"nzNoColon\"\n        [nzLabelWrap]=\"nzLabelWrap\"\n      ></wn-form-group>\n    `,\n  }),\n}"
            },
            {
                "name": "Interactive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/template/helper-center.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  ...Template,\n  args: {\n    mode: 'button',\n    text: 'Interactive example',\n    type: 'primary',\n  },\n  parameters: {\n    controls: { expanded: true },\n    docs: {\n      description: {\n        story: 'Interactive example with all controls',\n      },\n    },\n  },\n}"
            },
            {
                "name": "Interactive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/views/copy-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  ...Template,\n  args: {\n    value: 'Interactive example',\n    copiedTip: 'Copied!',\n  },\n  parameters: {\n    controls: { expanded: true },\n    docs: {\n      description: {\n        story: 'Interactive example with all controls',\n      },\n    },\n  },\n}"
            },
            {
                "name": "LongText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/views/copy-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    value:\n      \"This is a much longer text that demonstrates how the CopyTextComponent handles larger amounts of content. It might wrap or truncate depending on the component's implementation.\",\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'CopyText component with a long text to demonstrate text wrapping or truncation',\n      },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/directives/blur-on-click.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BlurOnClickStoryComponent>",
                "defaultValue": "{\n  title: 'Directives/BlurOnClick',\n  component: BlurOnClickStoryComponent,\n  tags: ['autodocs'],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/directives/click-outside.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ClickOutsideStoryComponent>",
                "defaultValue": "{\n  title: 'Directives/ClickOutside',\n  component: ClickOutsideStoryComponent,\n  tags: ['autodocs'],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/directives/scrollto.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ScrollToStoryComponent>",
                "defaultValue": "{\n  title: 'Directives/ScrollTo',\n  component: ScrollToStoryComponent,\n  tags: ['autodocs'],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/form/form-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<FormGroupComponent>",
                "defaultValue": "{\n  title: 'Form/FormGroup',\n  component: FormGroupComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    layout: {\n      control: 'select',\n      options: ['horizontal', 'vertical', 'inline'],\n      description: 'Form layout mode',\n    },\n    nzLabelAlign: {\n      control: 'select',\n      options: ['left', 'right'],\n      description: 'Label text align',\n    },\n    nzNoColon: {\n      control: 'boolean',\n      description: 'Whether to show colon after label',\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [ReactiveFormsModule, FormsModule, NzFormModule, NzInputModule, NzRadioModule, NzSwitchModule],\n    }),\n    applicationConfig({\n      providers: [importProvidersFrom(BrowserAnimationsModule)],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<FrontendTableComponent<IData>>",
                "defaultValue": "{\n  title: 'Components/FrontendTable',\n  component: FrontendTableComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [NzTableModule, PipesModule, NzRadioModule, FormsModule],\n    }),\n    applicationConfig({\n      providers: [importProvidersFrom(BrowserAnimationsModule)],\n    }),\n  ],\n  parameters: {\n    docs: {\n      autodocs: true,\n      description: {\n        component: `\n### FrontendTable Component Documentation\n\n#### Basic Usage\n\\`\\`\\`html\n<wn-frontend-table\n  [nzData]=\"nzData\"\n  [columns]=\"columns\"\n></wn-frontend-table>\n\\`\\`\\`\n\n#### Columns Configuration\n\\`\\`\\`typescript\ninterface IColumn {\n  name: string; // Field name\n  title: string; // Column header text\n  type: 'text' | 'number' | 'date' | 'custom'; // Data type\n  params?: Record<string, any>; // Type parameters\n  sortFilter?: { // Sorting and filtering configuration\n    sortOrder: SortOrder | null;\n    sortFn: (a: any, b: any) => number;\n    sortDirections: SortOrder[];\n    filterFn: (list: any[], item: any) => boolean;\n    listOfFilter: { text: string; value: any }[];\n    filterMultiple: boolean;\n  };\n}\n\\`\\`\\`\n\n#### Supported Features\n- Pagination (\\`nzShowPagination\\`)\n- Page size changer (\\`nzShowSizeChanger\\`)\n- Row selection (\\`showChecked\\`)\n- Sorting (\\`sortFilter\\`)\n- Filtering (\\`sortFilter\\`)\n        `,\n      },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/template/header-template.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<HeaderTemplateComponent>",
                "defaultValue": "{\n  title: 'Components/HeaderTemplate',\n  component: HeaderTemplateComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [],\n      providers: [TemplateService],\n      declarations: [HeaderTemplateComponent],\n    }),\n    applicationConfig({\n      providers: [importProvidersFrom(BrowserAnimationsModule), TemplateService],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/template/helper-center.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<HelpCenterComponent>",
                "defaultValue": "{\n  title: 'Components/HelpCenter',\n  component: HelpCenterComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    mode: {\n      control: 'select',\n      options: [undefined, 'button', 'text'],\n      description: 'Display mode of the help center',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'undefined' },\n      },\n    },\n    text: {\n      control: 'text',\n      description: 'Help text content',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'Help' },\n      },\n    },\n    type: {\n      control: 'select',\n      options: ['primary', 'text', 'link'],\n      description: 'Button type style',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'primary' },\n      },\n    },\n  },\n  parameters: {\n    controls: { expanded: true },\n    docs: {\n      description: {\n        component: `\nThe HelpCenter component provides contextual help information in different display modes.\n\n### Features:\n- Multiple display modes: button, text, or default\n- Customizable icon and tooltip\n- Responsive design\n        `,\n      },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/views/copy-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CopyTextComponent>",
                "defaultValue": "{\n  title: 'Components/CopyText',\n  component: CopyTextComponent,\n  tags: ['autodocs'],\n  decorators: [\n    applicationConfig({\n      providers: [provideAnimationsAsync()],\n    }),\n  ],\n  argTypes: {\n    value: {\n      control: 'text',\n      description: 'Text to be copied',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: '' },\n      },\n    },\n    title: {\n      control: 'text',\n      description: 'Text show in ui',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: '' },\n      },\n    },\n    copiedTip: {\n      control: 'text',\n      description: 'Message shown after successful copy',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'Copied' },\n      },\n    },\n  },\n  parameters: {\n    controls: { expanded: true },\n    docs: {\n      description: {\n        component: `\nThe CopyText component provides an easy way to copy text to the clipboard.\n\n### Features:\n- Displays text with a copy button\n- Customizable tooltip messages\n- Responsive design\n        `,\n      },\n    },\n  },\n}"
            },
            {
                "name": "Pagination",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    nzData: sampleData,\n    columns: columns,\n    nzShowPagination: true,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n        [nzShowPagination]=\"nzShowPagination\"\n      ></wn-frontend-table>\n    `,\n  }),\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/directives/blur-on-click.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/directives/click-outside.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/directives/scrollto.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    nzData: sampleData,\n    columns: columns,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n      ></wn-frontend-table>\n    `,\n  }),\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/template/header-template.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    headerVars: [\n      {\n        title: 'Test Header',\n        pathKey: 'test/path',\n        noTemp: false,\n        key: 'test-header',\n      },\n    ],\n  },\n  argTypes: {\n    headerVars: {\n      control: {\n        type: 'object',\n      },\n    },\n  },\n  render: (args) => {\n    const templateService = new TemplateService();\n\n    return {\n      props: {\n        headerVars: args.headerVars,\n        headerTemplate: null as TemplateRef<any> | string | null,\n        addHeader: async function () {\n          const newHeader = {\n            title: 'New Header',\n            pathKey: 'new/path',\n            noTemp: false,\n            key: 'new-header',\n          };\n          this['headerTemplate'] = await templateService.headerTitlePromise(newHeader);\n        },\n      },\n      template: `\n        <wn-header-template></wn-header-template>\n        <div style=\"margin-top: 20px\">\n          <button nz-button (click)=\"addHeader()\">Add Header</button>\n        </div>\n        <div>Below is a header template</div>\n        @if (headerTemplate) {\n          @if (typeof headerTemplate === 'string') {\n            <div>{{ headerTemplate }}</div>\n          } @else {\n            <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n          }\n        }\n      `,\n    };\n  },\n}"
            },
            {
                "name": "sampleData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IData[]",
                "defaultValue": "generateSampleData(100)"
            },
            {
                "name": "SizeChanger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    nzData: sampleData,\n    columns: columns,\n    nzShowSizeChanger: true,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n        [nzShowSizeChanger]=\"nzShowSizeChanger\"\n      ></wn-frontend-table>\n    `,\n  }),\n}"
            },
            {
                "name": "Sorting",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    nzData: sampleData,\n    columns: columnsWithSortFilter,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n      ></wn-frontend-table>\n    `,\n  }),\n}"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/template/helper-center.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-help-center\n        [mode]=\"mode\"\n        [text]=\"text\"\n        [type]=\"type\"\n      ></wn-help-center>\n    `,\n  }),\n}"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/views/copy-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-copy-text\n        [value]=\"value\"\n        [copiedTip]=\"copiedTip\"\n      ></wn-copy-text>\n    `,\n  }),\n}"
            },
            {
                "name": "TextMode",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/template/helper-center.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    mode: 'text',\n    text: 'Hover for more information',\n    type: 'text',\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Help center displayed as inline text',\n      },\n    },\n  },\n}"
            },
            {
                "name": "WithDisabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/form/form-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    items: defaultItems,\n    control: controlDisabled,\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n    },\n    template: `\n      <wn-form-group\n        [items]=\"items\"\n        [control]=\"control\"\n      ></wn-form-group>\n    `,\n  }),\n}"
            },
            {
                "name": "WithFixedColumns",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    nzData: sampleData,\n    columns: columnsExtended,\n    maxWidth: '800px',\n    maxHeight: '400px',\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n        [maxWidth]=\"maxWidth\"\n        [maxHeight]=\"maxHeight\"\n        [nzShowPagination]=\"false\"\n      ></wn-frontend-table>\n    `,\n  }),\n}"
            },
            {
                "name": "WithHide",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/form/form-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    items: defaultItems,\n    control: controlHide,\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n    },\n    template: `\n      <wn-form-group\n        [items]=\"items\"\n        [control]=\"control\"\n      ></wn-form-group>\n    `,\n  }),\n}"
            },
            {
                "name": "WithMaxDimensions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    nzData: sampleData,\n    columns: columnsExtended,\n    maxWidth: '800px',\n    maxHeight: '400px',\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n        [maxWidth]=\"maxWidth\"\n        [maxHeight]=\"maxHeight\"\n        [nzShowPagination]=\"false\"\n      ></wn-frontend-table>\n    `,\n  }),\n}"
            },
            {
                "name": "WithReset",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/form/form-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    items: defaultItems,\n    control: controlReset,\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n    },\n    template: `\n      <wn-form-group\n        [items]=\"items\"\n        [control]=\"control\"\n      ></wn-form-group>\n    `,\n  }),\n}"
            },
            {
                "name": "WithSize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    nzData: sampleData,\n    columns: columns,\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n      currentSize: 'small',\n      sizeOptions: [\n        { label: 'Small', value: 'small' },\n        { label: 'Middle', value: 'middle' },\n        { label: 'Default', value: 'default' },\n      ],\n      onSizeChange: function (size: 'small' | 'middle' | 'default') {\n        console.log('onSizeChange', size);\n        this['currentSize'] = size;\n      },\n    },\n    template: `\n      <div>\n        <nz-radio-group\n          [(ngModel)]=\"currentSize\"\n          (ngModelChange)=\"onSizeChange($event)\"\n          style=\"margin-bottom: 16px\"\n        >\n          <label nz-radio *ngFor=\"let option of sizeOptions\" [nzValue]=\"option.value\">\n            {{option.label}}\n          </label>\n        </nz-radio-group>\n        <wn-frontend-table\n          [nzData]=\"nzData\"\n          [columns]=\"columns\"\n          [nzSize]=\"currentSize\"\n          [nzBordered]=\"true\"\n        ></wn-frontend-table>\n      </div>\n    `,\n  }),\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BlurOnClickStoryComponent>",
                "file": "projects/wn-zorro/src/stories/directives/blur-on-click.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ClickOutsideStoryComponent>",
                "file": "projects/wn-zorro/src/stories/directives/click-outside.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ScrollToStoryComponent>",
                "file": "projects/wn-zorro/src/stories/directives/scrollto.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<FormGroupComponent>",
                "file": "projects/wn-zorro/src/stories/form/form-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<FrontendTableComponent<IData>>",
                "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<HeaderTemplateComponent>",
                "file": "projects/wn-zorro/src/stories/template/header-template.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<HelpCenterComponent>",
                "file": "projects/wn-zorro/src/stories/template/helper-center.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CopyTextComponent>",
                "file": "projects/wn-zorro/src/stories/views/copy-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts": [
                {
                    "name": "AllFeatures",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    nzData: sampleData,\n    columns: columns,\n    showChecked: true,\n    nzShowPagination: true,\n    nzShowSizeChanger: true,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n        [showChecked]=\"showChecked\"\n        [nzShowPagination]=\"nzShowPagination\"\n        [nzShowSizeChanger]=\"nzShowSizeChanger\"\n      ></wn-frontend-table>\n    `,\n  }),\n}"
                },
                {
                    "name": "BasicFeatures",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    nzData: sampleData,\n    columns: columns,\n    nzTitle: 'Table Header',\n    nzFooter: 'Table Footer',\n    nzBordered: true,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n        [nzTitle]=\"nzTitle\"\n        [nzFooter]=\"nzFooter\"\n        [nzBordered]=\"nzBordered\"\n      ></wn-frontend-table>\n    `,\n  }),\n}"
                },
                {
                    "name": "Checkable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    nzData: sampleData,\n    columns: columns,\n    showChecked: true,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n        [showChecked]=\"showChecked\"\n      ></wn-frontend-table>\n    `,\n  }),\n}"
                },
                {
                    "name": "columns",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {\n    name: 'name',\n    title: 'Name',\n    type: 'text' as const,\n    params: {},\n  },\n  {\n    name: 'age',\n    title: 'Age',\n    type: 'text' as const,\n    params: {},\n  },\n  {\n    name: 'address',\n    title: 'Address',\n    type: 'text' as const,\n    params: {},\n  },\n]"
                },
                {
                    "name": "columnsExtended",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IColumn[]",
                    "defaultValue": "[\n  ...columns,\n  ...columns.map((col) => ({ ...col, name: col.name + '-1', title: col.title + '-1' })),\n  {\n    name: 'actions',\n    title: 'Actions',\n    type: 'text',\n    params: {},\n    fixRight: true,\n    width: '100px',\n  },\n]"
                },
                {
                    "name": "columnsWithSortFilter",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {\n    ...columns[0],\n    sortFilter: {\n      sortOrder: null,\n      sortFn: (a: IData, b: IData) => a.name.localeCompare(b.name),\n      sortDirections: ['ascend', 'descend', null],\n      filterFn: (list: string[], item: IData) => list.some((name) => item.name.includes(name)),\n      listOfFilter: getUniqueValues(sampleData, 'name'),\n      filterMultiple: true,\n    },\n  },\n  {\n    ...columns[1],\n    sortFilter: {\n      sortOrder: null,\n      sortFn: (a: IData, b: IData) => a.age - b.age,\n      sortDirections: ['ascend', 'descend', null],\n      filterFn: (list: number[], item: IData) => list.some((age) => item.age >= age && item.age < age + 10),\n      listOfFilter: getUniqueValues(sampleData, 'age'),\n      filterMultiple: true,\n    },\n  },\n  {\n    ...columns[2],\n    sortFilter: {\n      sortOrder: null,\n      sortFn: (a: IData, b: IData) => a.address.localeCompare(b.address),\n      sortDirections: ['ascend', 'descend', null],\n      filterFn: (list: string[], item: IData) => list.some((address) => item.address.includes(address)),\n      listOfFilter: getUniqueValues(sampleData, 'address'),\n      filterMultiple: true,\n    },\n  },\n]"
                },
                {
                    "name": "Expandable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    nzData: sampleData,\n    columns: columns,\n    nzExpandable: true,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [expandKey]=\"'expandContent'\"\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n        [nzExpandable]=\"nzExpandable\"\n      ></wn-frontend-table>\n    `,\n  }),\n}"
                },
                {
                    "name": "Filtering",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    nzData: sampleData,\n    columns: columns,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n      ></wn-frontend-table>\n    `,\n  }),\n}"
                },
                {
                    "name": "generateSampleData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(count: number): IData[] => {\n  return Array.from({ length: count }, (_, index) => ({\n    id: index + 1,\n    name: faker.person.fullName(),\n    age: faker.number.int({ min: 18, max: 80 }),\n    address: faker.location.streetAddress(),\n    expandContent: `Details for ${faker.person.fullName()}:\n- Phone: ${faker.phone.number()}\n- Email: ${faker.internet.email()}\n- Company: ${faker.company.name()}\n- Job: ${faker.person.jobTitle()}`,\n  }));\n}"
                },
                {
                    "name": "getUniqueValues",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(data: IData[], key: keyof IData, count = 5) => {\n  const values = [\n    ...new Set(\n      data.map((item) => {\n        if (key === 'age') {\n          return Math.floor(item[key] / 10) * 10;\n        }\n        return item[key].toString().split(' ')[0];\n      })\n    ),\n  ];\n  return values.slice(0, count).map((value) => ({ text: value, value }));\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<FrontendTableComponent<IData>>",
                    "defaultValue": "{\n  title: 'Components/FrontendTable',\n  component: FrontendTableComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [NzTableModule, PipesModule, NzRadioModule, FormsModule],\n    }),\n    applicationConfig({\n      providers: [importProvidersFrom(BrowserAnimationsModule)],\n    }),\n  ],\n  parameters: {\n    docs: {\n      autodocs: true,\n      description: {\n        component: `\n### FrontendTable Component Documentation\n\n#### Basic Usage\n\\`\\`\\`html\n<wn-frontend-table\n  [nzData]=\"nzData\"\n  [columns]=\"columns\"\n></wn-frontend-table>\n\\`\\`\\`\n\n#### Columns Configuration\n\\`\\`\\`typescript\ninterface IColumn {\n  name: string; // Field name\n  title: string; // Column header text\n  type: 'text' | 'number' | 'date' | 'custom'; // Data type\n  params?: Record<string, any>; // Type parameters\n  sortFilter?: { // Sorting and filtering configuration\n    sortOrder: SortOrder | null;\n    sortFn: (a: any, b: any) => number;\n    sortDirections: SortOrder[];\n    filterFn: (list: any[], item: any) => boolean;\n    listOfFilter: { text: string; value: any }[];\n    filterMultiple: boolean;\n  };\n}\n\\`\\`\\`\n\n#### Supported Features\n- Pagination (\\`nzShowPagination\\`)\n- Page size changer (\\`nzShowSizeChanger\\`)\n- Row selection (\\`showChecked\\`)\n- Sorting (\\`sortFilter\\`)\n- Filtering (\\`sortFilter\\`)\n        `,\n      },\n    },\n  },\n}"
                },
                {
                    "name": "Pagination",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    nzData: sampleData,\n    columns: columns,\n    nzShowPagination: true,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n        [nzShowPagination]=\"nzShowPagination\"\n      ></wn-frontend-table>\n    `,\n  }),\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    nzData: sampleData,\n    columns: columns,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n      ></wn-frontend-table>\n    `,\n  }),\n}"
                },
                {
                    "name": "sampleData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IData[]",
                    "defaultValue": "generateSampleData(100)"
                },
                {
                    "name": "SizeChanger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    nzData: sampleData,\n    columns: columns,\n    nzShowSizeChanger: true,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n        [nzShowSizeChanger]=\"nzShowSizeChanger\"\n      ></wn-frontend-table>\n    `,\n  }),\n}"
                },
                {
                    "name": "Sorting",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    nzData: sampleData,\n    columns: columnsWithSortFilter,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n      ></wn-frontend-table>\n    `,\n  }),\n}"
                },
                {
                    "name": "WithFixedColumns",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    nzData: sampleData,\n    columns: columnsExtended,\n    maxWidth: '800px',\n    maxHeight: '400px',\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n        [maxWidth]=\"maxWidth\"\n        [maxHeight]=\"maxHeight\"\n        [nzShowPagination]=\"false\"\n      ></wn-frontend-table>\n    `,\n  }),\n}"
                },
                {
                    "name": "WithMaxDimensions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    nzData: sampleData,\n    columns: columnsExtended,\n    maxWidth: '800px',\n    maxHeight: '400px',\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-frontend-table\n        [nzData]=\"nzData\"\n        [columns]=\"columns\"\n        [maxWidth]=\"maxWidth\"\n        [maxHeight]=\"maxHeight\"\n        [nzShowPagination]=\"false\"\n      ></wn-frontend-table>\n    `,\n  }),\n}"
                },
                {
                    "name": "WithSize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    nzData: sampleData,\n    columns: columns,\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n      currentSize: 'small',\n      sizeOptions: [\n        { label: 'Small', value: 'small' },\n        { label: 'Middle', value: 'middle' },\n        { label: 'Default', value: 'default' },\n      ],\n      onSizeChange: function (size: 'small' | 'middle' | 'default') {\n        console.log('onSizeChange', size);\n        this['currentSize'] = size;\n      },\n    },\n    template: `\n      <div>\n        <nz-radio-group\n          [(ngModel)]=\"currentSize\"\n          (ngModelChange)=\"onSizeChange($event)\"\n          style=\"margin-bottom: 16px\"\n        >\n          <label nz-radio *ngFor=\"let option of sizeOptions\" [nzValue]=\"option.value\">\n            {{option.label}}\n          </label>\n        </nz-radio-group>\n        <wn-frontend-table\n          [nzData]=\"nzData\"\n          [columns]=\"columns\"\n          [nzSize]=\"currentSize\"\n          [nzBordered]=\"true\"\n        ></wn-frontend-table>\n      </div>\n    `,\n  }),\n}"
                }
            ],
            "projects/wn-zorro/src/stories/template/helper-center.stories.ts": [
                {
                    "name": "ButtonMode",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/template/helper-center.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    mode: 'button',\n    text: 'Click for help',\n    type: 'primary',\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Help center displayed as a clickable button',\n      },\n    },\n  },\n}"
                },
                {
                    "name": "CustomText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/template/helper-center.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    mode: 'button',\n    text: 'Custom help text',\n    type: 'primary',\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Help center with custom text',\n      },\n    },\n  },\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/template/helper-center.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  parameters: {\n    docs: {\n      description: {\n        story: 'Default help center with minimal configuration',\n      },\n    },\n  },\n}"
                },
                {
                    "name": "Interactive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/template/helper-center.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  ...Template,\n  args: {\n    mode: 'button',\n    text: 'Interactive example',\n    type: 'primary',\n  },\n  parameters: {\n    controls: { expanded: true },\n    docs: {\n      description: {\n        story: 'Interactive example with all controls',\n      },\n    },\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/template/helper-center.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<HelpCenterComponent>",
                    "defaultValue": "{\n  title: 'Components/HelpCenter',\n  component: HelpCenterComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    mode: {\n      control: 'select',\n      options: [undefined, 'button', 'text'],\n      description: 'Display mode of the help center',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'undefined' },\n      },\n    },\n    text: {\n      control: 'text',\n      description: 'Help text content',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'Help' },\n      },\n    },\n    type: {\n      control: 'select',\n      options: ['primary', 'text', 'link'],\n      description: 'Button type style',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'primary' },\n      },\n    },\n  },\n  parameters: {\n    controls: { expanded: true },\n    docs: {\n      description: {\n        component: `\nThe HelpCenter component provides contextual help information in different display modes.\n\n### Features:\n- Multiple display modes: button, text, or default\n- Customizable icon and tooltip\n- Responsive design\n        `,\n      },\n    },\n  },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/template/helper-center.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-help-center\n        [mode]=\"mode\"\n        [text]=\"text\"\n        [type]=\"type\"\n      ></wn-help-center>\n    `,\n  }),\n}"
                },
                {
                    "name": "TextMode",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/template/helper-center.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    mode: 'text',\n    text: 'Hover for more information',\n    type: 'text',\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Help center displayed as inline text',\n      },\n    },\n  },\n}"
                }
            ],
            "projects/wn-zorro/src/stories/form/form-group.stories.ts": [
                {
                    "name": "controlDisabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/form/form-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormController",
                    "defaultValue": "{\n  disableds: [\n    {\n      field: 'gender',\n      rules: [\n        { value: 'male', columns: ['female_item'] },\n        { value: 'female', columns: ['male_item'] },\n      ],\n    },\n  ],\n}"
                },
                {
                    "name": "controlHide",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/form/form-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormController",
                    "defaultValue": "{\n  hides: [\n    {\n      field: 'gender',\n      rules: [\n        { value: 'male', columns: ['male_item'] },\n        { value: 'female', columns: ['female_item'] },\n      ],\n    },\n  ],\n}"
                },
                {
                    "name": "controlReset",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/form/form-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormController",
                    "defaultValue": "{\n  resets: [\n    {\n      field: 'username',\n      columns: ['email'],\n    },\n  ],\n}"
                },
                {
                    "name": "defaultItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/form/form-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormItem[]",
                    "defaultValue": "[\n  {\n    name: 'username',\n    type: 'input',\n    params: {\n      nzAddOnBefore: 'User',\n    },\n    label: {\n      label: 'Username',\n      tooltip: 'Your login name',\n      help: 'Must be unique',\n    },\n    placeholder: 'Enter your username',\n    required: true,\n    validates: ['required', 'minLength'],\n    validatesArgs: {\n      minLength: [4],\n    },\n    control: {\n      hasFeedback: true,\n      errorTip: 'Username is required and must be at least 4 characters',\n      successTip: 'Username is valid',\n    },\n  },\n  {\n    name: 'subscribe',\n    type: 'checkbox',\n    label: {\n      label: 'Subscribe to newsletter',\n    },\n    required: false,\n  },\n  {\n    name: 'interests',\n    type: 'checkboxGroup',\n    label: {\n      label: 'Interests',\n      tooltip: 'Select your areas of interest',\n    },\n    params: {\n      options: [\n        { label: 'Technology', value: 'tech' },\n        { label: 'Sports', value: 'sports' },\n        { label: 'Music', value: 'music' },\n        { label: 'Travel', value: 'travel' },\n      ],\n    },\n    required: true,\n  },\n  {\n    name: 'country',\n    type: 'select',\n    label: {\n      label: 'Country',\n      tooltip: 'Select your country',\n    },\n    params: {\n      options: [\n        { label: 'United States', value: 'us' },\n        { label: 'Canada', value: 'ca' },\n        { label: 'United Kingdom', value: 'uk' },\n        { label: 'Australia', value: 'au' },\n      ],\n      showSearch: true,\n      mode: 'default',\n      size: 'default',\n    },\n    placeholder: 'Select a country',\n    required: true,\n  },\n  {\n    name: 'gender',\n    type: 'radio',\n    required: true,\n    params: {\n      options: ['male', 'female'],\n    },\n  },\n  {\n    name: 'male_item',\n    type: 'input',\n  },\n  {\n    name: 'female_item',\n    type: 'input',\n  },\n  {\n    name: 'email',\n    type: 'input',\n    params: {\n      nzAddOnBefore: '',\n      nzAddOnAfter: '',\n    },\n    label: {\n      label: 'Email',\n      tooltip: 'Your email address',\n      help: 'We will send verification email',\n    },\n    placeholder: 'Enter your email',\n    required: true,\n    validates: ['regexp'],\n    validatesArgs: {\n      regexp: [/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/],\n    },\n    control: {\n      hasFeedback: true,\n      errorTip: 'Invalid email format',\n      successTip: 'Valid email',\n    },\n  },\n  {\n    name: 'age',\n    type: 'number',\n    params: {\n      nzAddOnAfter: 'years',\n    },\n    label: {\n      label: 'Age',\n      tooltip: 'Your actual age',\n    },\n    placeholder: 'Enter your age',\n    required: true,\n    validates: ['required', 'min', 'max'],\n    validatesArgs: {\n      min: [0],\n      max: [120],\n    },\n    control: {\n      hasFeedback: true,\n      errorTip: 'Age must be between 0 and 120',\n    },\n  },\n]"
                },
                {
                    "name": "Interactive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/form/form-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    items: defaultItems,\n    layout: 'horizontal',\n    nzLabelAlign: 'right',\n    nzNoColon: false,\n    nzLabelWrap: false,\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n      onLayoutChange: (layout: 'horizontal' | 'vertical' | 'inline') => (args.layout = layout),\n      onAlignChange: (align: NzLabelAlignType) => (args.nzLabelAlign = align),\n    },\n    template: `\n      <div style=\"margin-bottom: 24px;\">\n        <label>Layout: </label>\n        <nz-radio-group [(ngModel)]=\"nzLayout\">\n          <label nz-radio nzValue=\"horizontal\">Horizontal</label>\n          <label nz-radio nzValue=\"vertical\">Vertical</label>\n          <label nz-radio nzValue=\"inline\">Inline</label>\n        </nz-radio-group>\n\n        <label style=\"margin-left: 24px;\">Label Align: </label>\n        <nz-radio-group [(ngModel)]=\"nzLabelAlign\">\n          <label nz-radio nzValue=\"left\">Left</label>\n          <label nz-radio nzValue=\"right\">Right</label>\n        </nz-radio-group>\n\n        <label style=\"margin-left: 24px;\">No Colon: </label>\n        <nz-switch [(ngModel)]=\"nzNoColon\"></nz-switch>\n\n        <label style=\"margin-left: 24px;\">Label Wrap: </label>\n        <nz-switch [(ngModel)]=\"nzLabelWrap\"></nz-switch>\n      </div>\n\n      <wn-form-group\n        [items]=\"items\"\n        [nzLayout]=\"nzLayout\"\n        [nzLabelAlign]=\"nzLabelAlign\"\n        [nzNoColon]=\"nzNoColon\"\n        [nzLabelWrap]=\"nzLabelWrap\"\n      ></wn-form-group>\n    `,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/form/form-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<FormGroupComponent>",
                    "defaultValue": "{\n  title: 'Form/FormGroup',\n  component: FormGroupComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    layout: {\n      control: 'select',\n      options: ['horizontal', 'vertical', 'inline'],\n      description: 'Form layout mode',\n    },\n    nzLabelAlign: {\n      control: 'select',\n      options: ['left', 'right'],\n      description: 'Label text align',\n    },\n    nzNoColon: {\n      control: 'boolean',\n      description: 'Whether to show colon after label',\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [ReactiveFormsModule, FormsModule, NzFormModule, NzInputModule, NzRadioModule, NzSwitchModule],\n    }),\n    applicationConfig({\n      providers: [importProvidersFrom(BrowserAnimationsModule)],\n    }),\n  ],\n}"
                },
                {
                    "name": "WithDisabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/form/form-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    items: defaultItems,\n    control: controlDisabled,\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n    },\n    template: `\n      <wn-form-group\n        [items]=\"items\"\n        [control]=\"control\"\n      ></wn-form-group>\n    `,\n  }),\n}"
                },
                {
                    "name": "WithHide",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/form/form-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    items: defaultItems,\n    control: controlHide,\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n    },\n    template: `\n      <wn-form-group\n        [items]=\"items\"\n        [control]=\"control\"\n      ></wn-form-group>\n    `,\n  }),\n}"
                },
                {
                    "name": "WithReset",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/form/form-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    items: defaultItems,\n    control: controlReset,\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n    },\n    template: `\n      <wn-form-group\n        [items]=\"items\"\n        [control]=\"control\"\n      ></wn-form-group>\n    `,\n  }),\n}"
                }
            ],
            "projects/wn-zorro/src/stories/views/copy-text.stories.ts": [
                {
                    "name": "CustomTooltips",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/views/copy-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    value: 'Text with custom message',\n    copiedTip: 'Text copied to clipboard!',\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'CopyText component with custom tooltip messages',\n      },\n    },\n  },\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/views/copy-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    value: 'Sample text to copy',\n    title: 'Copy title',\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Default CopyText component with sample text',\n      },\n    },\n  },\n}"
                },
                {
                    "name": "EmptyText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/views/copy-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    value: '',\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'CopyText component with no text to copy',\n      },\n    },\n  },\n}"
                },
                {
                    "name": "Interactive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/views/copy-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  ...Template,\n  args: {\n    value: 'Interactive example',\n    copiedTip: 'Copied!',\n  },\n  parameters: {\n    controls: { expanded: true },\n    docs: {\n      description: {\n        story: 'Interactive example with all controls',\n      },\n    },\n  },\n}"
                },
                {
                    "name": "LongText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/views/copy-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    value:\n      \"This is a much longer text that demonstrates how the CopyTextComponent handles larger amounts of content. It might wrap or truncate depending on the component's implementation.\",\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'CopyText component with a long text to demonstrate text wrapping or truncation',\n      },\n    },\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/views/copy-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CopyTextComponent>",
                    "defaultValue": "{\n  title: 'Components/CopyText',\n  component: CopyTextComponent,\n  tags: ['autodocs'],\n  decorators: [\n    applicationConfig({\n      providers: [provideAnimationsAsync()],\n    }),\n  ],\n  argTypes: {\n    value: {\n      control: 'text',\n      description: 'Text to be copied',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: '' },\n      },\n    },\n    title: {\n      control: 'text',\n      description: 'Text show in ui',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: '' },\n      },\n    },\n    copiedTip: {\n      control: 'text',\n      description: 'Message shown after successful copy',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'Copied' },\n      },\n    },\n  },\n  parameters: {\n    controls: { expanded: true },\n    docs: {\n      description: {\n        component: `\nThe CopyText component provides an easy way to copy text to the clipboard.\n\n### Features:\n- Displays text with a copy button\n- Customizable tooltip messages\n- Responsive design\n        `,\n      },\n    },\n  },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/views/copy-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <wn-copy-text\n        [value]=\"value\"\n        [copiedTip]=\"copiedTip\"\n      ></wn-copy-text>\n    `,\n  }),\n}"
                }
            ],
            "projects/wn-zorro/src/stories/directives/blur-on-click.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/directives/blur-on-click.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BlurOnClickStoryComponent>",
                    "defaultValue": "{\n  title: 'Directives/BlurOnClick',\n  component: BlurOnClickStoryComponent,\n  tags: ['autodocs'],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/directives/blur-on-click.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "projects/wn-zorro/src/stories/directives/click-outside.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/directives/click-outside.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ClickOutsideStoryComponent>",
                    "defaultValue": "{\n  title: 'Directives/ClickOutside',\n  component: ClickOutsideStoryComponent,\n  tags: ['autodocs'],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/directives/click-outside.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "projects/wn-zorro/src/stories/directives/scrollto.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/directives/scrollto.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ScrollToStoryComponent>",
                    "defaultValue": "{\n  title: 'Directives/ScrollTo',\n  component: ScrollToStoryComponent,\n  tags: ['autodocs'],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/directives/scrollto.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "projects/wn-zorro/src/stories/template/header-template.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/template/header-template.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<HeaderTemplateComponent>",
                    "defaultValue": "{\n  title: 'Components/HeaderTemplate',\n  component: HeaderTemplateComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [],\n      providers: [TemplateService],\n      declarations: [HeaderTemplateComponent],\n    }),\n    applicationConfig({\n      providers: [importProvidersFrom(BrowserAnimationsModule), TemplateService],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/src/stories/template/header-template.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    headerVars: [\n      {\n        title: 'Test Header',\n        pathKey: 'test/path',\n        noTemp: false,\n        key: 'test-header',\n      },\n    ],\n  },\n  argTypes: {\n    headerVars: {\n      control: {\n        type: 'object',\n      },\n    },\n  },\n  render: (args) => {\n    const templateService = new TemplateService();\n\n    return {\n      props: {\n        headerVars: args.headerVars,\n        headerTemplate: null as TemplateRef<any> | string | null,\n        addHeader: async function () {\n          const newHeader = {\n            title: 'New Header',\n            pathKey: 'new/path',\n            noTemp: false,\n            key: 'new-header',\n          };\n          this['headerTemplate'] = await templateService.headerTitlePromise(newHeader);\n        },\n      },\n      template: `\n        <wn-header-template></wn-header-template>\n        <div style=\"margin-top: 20px\">\n          <button nz-button (click)=\"addHeader()\">Add Header</button>\n        </div>\n        <div>Below is a header template</div>\n        @if (headerTemplate) {\n          @if (typeof headerTemplate === 'string') {\n            <div>{{ headerTemplate }}</div>\n          } @else {\n            <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n          }\n        }\n      `,\n    };\n  },\n}"
                }
            ],
            "projects/wn-zorro/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/wn-zorro/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/wn-zorro/src/stories/directives/blur-on-click.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BlurOnClickStoryComponent>",
                    "file": "projects/wn-zorro/src/stories/directives/blur-on-click.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/wn-zorro/src/stories/directives/click-outside.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ClickOutsideStoryComponent>",
                    "file": "projects/wn-zorro/src/stories/directives/click-outside.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/wn-zorro/src/stories/directives/scrollto.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ScrollToStoryComponent>",
                    "file": "projects/wn-zorro/src/stories/directives/scrollto.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/wn-zorro/src/stories/form/form-group.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<FormGroupComponent>",
                    "file": "projects/wn-zorro/src/stories/form/form-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<FrontendTableComponent<IData>>",
                    "file": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/wn-zorro/src/stories/template/header-template.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<HeaderTemplateComponent>",
                    "file": "projects/wn-zorro/src/stories/template/header-template.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/wn-zorro/src/stories/template/helper-center.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<HelpCenterComponent>",
                    "file": "projects/wn-zorro/src/stories/template/helper-center.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/wn-zorro/src/stories/views/copy-text.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CopyTextComponent>",
                    "file": "projects/wn-zorro/src/stories/views/copy-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/wn-zorro/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/directives/blur-on-click.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "BlurOnClickStoryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/directives/blur-on-click.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/directives/blur-on-click.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/directives/blur-on-click.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/directives/click-outside.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "ClickOutsideStoryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/directives/click-outside.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/directives/click-outside.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/directives/click-outside.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/directives/scrollto.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "ScrollToStoryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/directives/scrollto.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/directives/scrollto.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/directives/scrollto.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/form/form-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "controlDisabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/form/form-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "controlHide",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/form/form-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "controlReset",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/form/form-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/form/form-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Interactive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/form/form-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/form/form-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithDisabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/form/form-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithHide",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/form/form-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithReset",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/form/form-group.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IData",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "WithSizeProps",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AllFeatures",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BasicFeatures",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Checkable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "columns",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "columnsExtended",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "columnsWithSortFilter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Expandable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Filtering",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "generateSampleData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getUniqueValues",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Pagination",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sampleData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SizeChanger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sorting",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithFixedColumns",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithMaxDimensions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/tables/frontend-table.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/template/header-template.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/template/header-template.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/template/header-template.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/template/helper-center.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonMode",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/template/helper-center.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/template/helper-center.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/template/helper-center.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Interactive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/template/helper-center.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/template/helper-center.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/template/helper-center.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextMode",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/template/helper-center.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/views/copy-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomTooltips",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/views/copy-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/views/copy-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EmptyText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/views/copy-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Interactive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/views/copy-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LongText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/views/copy-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/views/copy-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/wn-zorro/src/stories/views/copy-text.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}